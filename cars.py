#!/usr/bin/env python3

import json
import locale
import sys
import reports
import email

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
      data = json.load(json_file)
  return data

def format_car(car):
    """Given a car dictionary, returns a nicely formatted name."""
    return "{} {} ({})".format(
        car["car_make"], car["car_model"], car["car_year"])

def process_data(data):
    """Analyses the data, looking for maximums.

    Returns a list of lines that summarise the information.
    """
    max_revenue = {"revenue": 0}
    max_sales = {"total_sales": 0}
    year = {}

    for item in data:
        # Calculate the revenue generated by this model (price * total_sales)
        # We need to convert the price from "$1234.56" to 1234.56
        item_price = locale.atof(item['price'].strip("$"))
        item_revenue = item['total_sales'] * item_price
        if item_revenue > max_revenue['revenue']:
            item['revenue'] = item_revenue
            max_revenue = item
        # Calculate the max sales
        if item['total_sales'] > max_sales['total_sales']:
            max_sales = item
        # Calculate the most popular year for car sales
        if item['car']['car_year'] in year:
            year[item['car']['car_year']] = year.get(item['car']['car_year']) + item['total_sales']
        else:
            year[item['car']['car_year']] = item['total_sales']

    max_year = max(year, key=year.get)

    summary = [
      "The {} generated the most revenue: ${}".format(
        format_car(max_revenue['car']), max_revenue['revenue']), "<br/>",
      "The {} hd the most sales: {}.".format(format_car(max_sales['car']),
         max_sales['total_sales']), "<br/>",
      "The most popular year was {} with {} sales.".format(max_year, year[max_year])
    ]

    return summary

def cars_dict_to_table(car_data):
    """Turns the data in car_data into a list of lists."""
    table_data = [["ID", "Car", "Price", "Total Sales"]]
    for item in car_data:
        table_data.append([item['id'], format_car(item['car']), item['price'], item['total_sales']])
    return table_data

def main(argv):
    """Process the JSON data and generate a full report out of it."""
    data = load_data("car_sales.json")
    summary = process_data(data)
    print(summary)
    # Create PDF reports
    car_table = cars_dict_to_table(data)
    summary_nw = summary[0] + summary[1] + summary[2] + summary[3] + summary[4]
    reports.generate("/tmp/cars.pdf", "Sales summary for last month", summary_nw, car_table)

    # Generate and send email
    sender = "automation@example.com"
    receiver = "something@example.com"
    subject = "Sales summary for last month"
    body = summary[0] + summary[2] + summary[4]

    message = emails.generate(sender, receiver, subject, body, "/tmp/cars.pdf")
    emails.send(message)

if __name__ == "__main__":
    main(sys.argv)
